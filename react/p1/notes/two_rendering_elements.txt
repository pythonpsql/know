What are elements?
  React elements are plain objects
  cheap to create unlike browser DOM elements
  describe what you want to see on the screen
  e.g.
  const element = <h1>This</h1>
  React DOM updates the DOM to match elements

How to render an element into the DOM?
  Usually, react apps have one root DOM node
  The convention is to set its id to 'root'
  To render a react element inside it, pass 
    the element and node in this way:
    reactDOM.render(
    element, document.getElementbyId('root')
    )
  It is possible to have 
    multiple isolated root DOM nodes

How to update the rendered element?
  React elements are immutable
    Its children or attributes cannot be changed
  One way to update the UI is to create a new element
  So,
    we create an element inside a function
    The function has some variable value inside it
    We render the element inside the function
    Now whenever the function is called as a callback, 
      the variable value inside it will lead to
        creation of a different element
    This is only theoretical.
    In practice, the ReactDOM.render() is called
      only once in a React app
    React only updates what's necessary
    React DOM compares the element and its children
    to the previous one,
    and only applies the DOM updates necessary 
    to bring the DOM to the desired state.
    Example:

      function tick() {
        const element = (
          <div>
            <h1>Hello, world!</h1>
            <h2>It is {new Date().toLocaleTimeString()}.</h2>
          </div>
        );
        ReactDOM.render(element, document.getElementById('root'));
      }
      setInterval(tick, 1000)

    Only the time within h2 (not entire h2)
      gets updated every second.
